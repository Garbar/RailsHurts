var quizJSON={"info":{"name":"Ruby or Ruby on Rails?","main":"Let's check whether you remember where Ruby ends and Rails starts","results":"<h5>Learn More</h5><p></p>","level1":"Ruby expert!","level2":"Perfect!","level3":"Not bad!","level4":"Nice try\"","level5":"Seriously?"},"questions":[{"q":"with_options","id":1,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p><p><span>with_options</span>(options, &block)</p>\n<p>An elegant way to factor duplication out of options passed to a series of method calls.\nEach method called in the block, with the block variable as the receiver,\nwill have its options merged with the default options hash provided.\nEach method called on the block variable must take an options hash as its final argument</p>\n<p><a href='http://api.rubyonrails.org/?q=with_options'>api.rubyonrails.org</a></p>\n","incorrect":"<p><span>No, this is not Ruby</span></p><p><span>with_options</span>(options, &block)</p>\n<p>An elegant way to factor duplication out of options passed to a series of method calls.\nEach method called in the block, with the block variable as the receiver,\nwill have its options merged with the default options hash provided.\nEach method called on the block variable must take an options hash as its final argument</p>\n<p><a href='http://api.rubyonrails.org/?q=with_options'>api.rubyonrails.org</a></p>\n"},{"q":"reverse_merge","id":2,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p><p><span>reverse_merge</span>(other_hash)</p>\n<p>Like merge but the other way around: Merges the receiver into the argument and returns a new hash with indifferent access as resul</p>\n<p><a href='http://api.rubyonrails.org/?q=reverse_merge'>api.rubyonrails.org</a></p>\n","incorrect":"<p><span>No, this is not Ruby</span></p><p><span>reverse_merge</span>(other_hash)</p>\n<p>Like merge but the other way around: Merges the receiver into the argument and returns a new hash with indifferent access as resul</p>\n<p><a href='http://api.rubyonrails.org/?q=reverse_merge'>api.rubyonrails.org</a></p>\n"},{"q":"DateTime.current","id":3,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"Array(foo: :bar)      # => [[:foo, :bar]]","id":4,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":".to_json","id":5,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":"Date.today","id":6,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":"a.cycle { |x| puts x }     # print, a, b, c, a, b, c,.. forever..","id":7,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":"Time.now","id":8,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":".downcase!","id":9,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":"class_attribute","id":10,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"alias_attribute","id":11,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":".duplicable?","id":12,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"Array.wrap(nil)     # => [] </br> Array.wrap([1, 2, 3]) # => [1, 2, 3]</br> Array.wrap(0)    # => [0]","id":13,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"'hello'.at(4)  # => 'o'","id":14,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"aaa.instance_values","id":15,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"1.in?([1,2])","id":16,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"M.reachable?","id":17,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"delegate","id":18,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"descendants","id":19,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":".to_xml","id":20,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"(1..10).include?(3..7)  # => true </br> (1..10).include?(0..7)  # => false","id":21,"a":[{"option":"Rails","correct":true},{"option":"Ruby","correct":false}],"correct":"<p><span>Yes, this is Rails</span></p>","incorrect":"<p><span>No, this is not Ruby</span></p>"},{"q":"Hash[]","id":22,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":".superclass","id":23,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":"420.modulo(4)","id":24,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":"[1,2,3,4,5].sample","id":25,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":"[%s] % \"same old drag\"             # => \"[same old drag]”","id":26,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"},{"q":"FileUtils.rm_r ‘somedir'","id":27,"a":[{"option":"Rails","correct":false},{"option":"Ruby","correct":true}],"correct":"<p><span>Yes, this is Ruby</span></p>","incorrect":"<p><span>No, this is not Rails</span></p>"}]};